---
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Install monasca agent
  hosts: all
  gather_facts: "{{ gather_facts | default(True) }}"
  user: root
  pre_tasks:
    - include: common-tasks/os-lxc-container-setup.yml
      static: no
    - include: common-tasks/os-log-dir-setup.yml
      vars:
        log_dirs:
          - src: "/openstack/log/{{ inventory_hostname }}-monasca"
            dest: "/var/log/monasca"
    - include: common-tasks/package-cache-proxy.yml
  roles:
    - role: "os_monasca-agent"
    - role: "openstack_openrc"
      tags:
        - openrc
    - role: "rsyslog_client"
      rsyslog_client_log_rotate_file: monasca_log_rotate
      rsyslog_client_log_dir: "/var/log/monasca"
      rsyslog_client_config_name: "99-monasca-rsyslog-client.conf"
      tags:
        - rsyslog
    - role: "system_crontab_coordination"
      tags:
        - crontab
  vars:
    is_metal: "{{ properties.is_metal|default(false) }}"
  vars_files:
    - vars/configs/haproxy_config.yml
  tags:
    - monasca

- name: Set user/permissions for monitoring rabbitmq
  hosts: "{{ rabbitmq_host_group | default('rabbitmq_all') }}[0]"
  user: root
  tasks:
    - name: Get list of rabbitmq vhosts
      shell: "rabbitmqctl list_vhosts | tail -n +2"
      register: rabbitmq_vhosts

    - name: Create rabbitmq monitoring user with monitoring privileges
      rabbitmq_user:
        user: "{{ rabbitmq_monitoring_userid|default('monitoring') }}"
        password: "{{ rabbitmq_monitoring_password }}"
        tags: "monitoring"
        vhost: "{{ item }}"
        read_priv: .*
        state: "present"
      when: rabbitmq_monitoring_password is defined
      with_items:
        - "{{ rabbitmq_vhosts.stdout_lines }}"
